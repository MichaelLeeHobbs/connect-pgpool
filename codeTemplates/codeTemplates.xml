<list>
  <codeTemplateLibrary version="3.9.0">
    <id>d382f981-c251-484d-86c5-bd76c56924c3</id>
    <name>ChannelUtils</name>
    <revision>5</revision>
    <lastModified>
      <time>1602548538651</time>
      <timezone>Etc/UTC</timezone>
    </lastModified>
    <description></description>
    <includeNewChannels>false</includeNewChannels>
    <enabledChannelIds>
      <string>687be862-0186-4c4f-adf8-167df5255fab</string>
      <string>3d194c52-0c93-4104-95cb-c4c2baaa8f85</string>
      <string>d4c7aa3a-6176-4a55-8463-97d0b27b140c</string>
      <string>0a57a2bf-346f-4519-b4ca-0436aeeb2ea5</string>
    </enabledChannelIds>
    <disabledChannelIds>
      <string>d4edf57b-e868-41ca-9b12-1ac51b2d6530</string>
      <string>220a84de-344c-44df-8929-7dc52ca0caaf</string>
      <string>1eaf2a13-b69c-4557-9333-02f6c0420c11</string>
      <string>3f1d55fc-81a4-4999-aa92-94e05f5d2af3</string>
    </disabledChannelIds>
    <codeTemplates>
      <codeTemplate version="3.9.0">
        <id>8456e87d-530a-4c67-9cae-3b8cb2bcf144</id>
        <name>getChannelNameIDMap</name>
        <revision>3</revision>
        <lastModified>
          <time>1602531752172</time>
          <timezone>Etc/UTC</timezone>
        </lastModified>
        <contextSet>
          <delegate>
            <contextType>DESTINATION_RESPONSE_TRANSFORMER</contextType>
            <contextType>DESTINATION_DISPATCHER</contextType>
            <contextType>SOURCE_FILTER_TRANSFORMER</contextType>
            <contextType>SOURCE_RECEIVER</contextType>
            <contextType>DESTINATION_FILTER_TRANSFORMER</contextType>
          </delegate>
        </contextSet>
        <properties class="com.mirth.connect.model.codetemplates.BasicCodeTemplateProperties">
          <type>FUNCTION</type>
          <code>/**
	Returns a channelID-to-channelName and channelName-to-channelID map.

	@return {String} return description
*/
function getChannelNameIDMap() {
	var map = {}
	ChannelUtil.getChannelIds().toArray().forEach(id=&gt;{
		var name = ChannelUtil.getChannelName(id)
		map[id] = name
		map[name] = id
	})
	return map
}</code>
        </properties>
      </codeTemplate>
    </codeTemplates>
  </codeTemplateLibrary>
  <codeTemplateLibrary version="3.9.0">
    <id>02386f09-a41f-4c3e-bd8a-d4c3a8056ede</id>
    <name>ConnectPGPool</name>
    <revision>8</revision>
    <lastModified>
      <time>1602548538647</time>
      <timezone>Etc/UTC</timezone>
    </lastModified>
    <description></description>
    <includeNewChannels>false</includeNewChannels>
    <enabledChannelIds>
      <string>3d194c52-0c93-4104-95cb-c4c2baaa8f85</string>
      <string>0a57a2bf-346f-4519-b4ca-0436aeeb2ea5</string>
    </enabledChannelIds>
    <disabledChannelIds>
      <string>687be862-0186-4c4f-adf8-167df5255fab</string>
      <string>d4edf57b-e868-41ca-9b12-1ac51b2d6530</string>
      <string>220a84de-344c-44df-8929-7dc52ca0caaf</string>
      <string>5a249510-935e-4653-9af1-5b51b8bf2341</string>
      <string>1eaf2a13-b69c-4557-9333-02f6c0420c11</string>
      <string>d4c7aa3a-6176-4a55-8463-97d0b27b140c</string>
      <string>3f1d55fc-81a4-4999-aa92-94e05f5d2af3</string>
    </disabledChannelIds>
    <codeTemplates>
      <codeTemplate version="3.9.0">
        <id>3e46d1bd-9c65-4ac6-b032-48245b40d621</id>
        <name>cpgpExecute</name>
        <revision>21</revision>
        <lastModified>
          <time>1602551819586</time>
          <timezone>Etc/UTC</timezone>
        </lastModified>
        <contextSet>
          <delegate>
            <contextType>DESTINATION_RESPONSE_TRANSFORMER</contextType>
            <contextType>DESTINATION_DISPATCHER</contextType>
            <contextType>SOURCE_FILTER_TRANSFORMER</contextType>
            <contextType>SOURCE_RECEIVER</contextType>
            <contextType>DESTINATION_FILTER_TRANSFORMER</contextType>
          </delegate>
        </contextSet>
        <properties class="com.mirth.connect.model.codetemplates.BasicCodeTemplateProperties">
          <type>FUNCTION</type>
          <code>if (typeof cpgpLibs === &apos;undefined&apos;) cpgpLibs = {}
cpgpLibs.HttpClientBuilder = Packages.org.apache.http.impl.client.HttpClientBuilder
cpgpLibs.HttpPost = Packages.org.apache.http.client.methods.HttpPost
cpgpLibs.EntityUtils = Packages.org.apache.http.util.EntityUtils

/**
	Modify the description here. Modify the function name and parameters as needed. One function per
	template is recommended; create a new code template for each new function.

	@param {String} secret - secret key
	@param {String} url - ConnectPGPool URL - for example http://cpgp:3000
	@param {String} action - query/exec/execOne
	@param {String} query - sql statement to run
	@param {Array} params - sql params
	@return {Object} returns sql result or error
*/
function cpgpExecute(args) {
	var client = new cpgpLibs.HttpClientBuilder.create().build()
	var url = args.url + &apos;/api/&apos; + args.action
	var httpPost = new cpgpLibs.HttpPost(url)
	var body = JSON.stringify({query: args.query, params: args.params || []})
	var request = cpgpCreateRequest(args)
	
	httpPost.setHeader(&quot;Content-type&quot;, &quot;application/json&quot;)
	httpPost.setHeader(&quot;X-Signature&quot;, cpgpCreateSignature({secret: args.secret, nonce: request.nonce, text: body}))
	httpPost.setHeader(&quot;X-Request-ID&quot;, request.requestId)
	httpPost.setHeader(&quot;X-nonce&quot;, request.nonce)
	httpPost.setEntity(new StringEntity(body))

	try {
		return JSON.parse(cpgpLibs.EntityUtils.toString(client.execute(httpPost).getEntity(), &quot;UTF-8&quot;).trim())
	} catch (e) {
		return e
	}
}</code>
        </properties>
      </codeTemplate>
      <codeTemplate version="3.9.0">
        <id>f951adb6-46da-459f-a800-1101440ee5ed</id>
        <name>cpgpGetClient</name>
        <revision>1</revision>
        <lastModified>
          <time>1602547914090</time>
          <timezone>Etc/UTC</timezone>
        </lastModified>
        <contextSet>
          <delegate>
            <contextType>DESTINATION_RESPONSE_TRANSFORMER</contextType>
            <contextType>DESTINATION_DISPATCHER</contextType>
            <contextType>SOURCE_FILTER_TRANSFORMER</contextType>
            <contextType>SOURCE_RECEIVER</contextType>
            <contextType>DESTINATION_FILTER_TRANSFORMER</contextType>
          </delegate>
        </contextSet>
        <properties class="com.mirth.connect.model.codetemplates.BasicCodeTemplateProperties">
          <type>FUNCTION</type>
          <code>/**
	Returns a Connect PGPool Client

	@param {String} url - ConnectPGPool URL - for example http://cpgp:3000
	@param {String} secret - preshared secret
	@return {String} return description
*/
function cpgpGetClient(url, secret) {
	return {
		query: (args)=&gt;cpgpExecute({url: url, secret: secret, action: &apos;query&apos;, query: args.query, params: args.params}),
		exec: (args)=&gt;cpgpExecute({url: url, secret: secret, action: &apos;exec&apos;, query: args.query, params: args.params}),
		execOne: (args)=&gt;cpgpExecute({url: url, secret: secret, action: &apos;execOne&apos;, query: args.query, params: args.params}),	
	}
}</code>
        </properties>
      </codeTemplate>
      <codeTemplate version="3.9.0">
        <id>8d88b3e9-af46-46f8-b3d5-eee05ec30702</id>
        <name>createRequest</name>
        <revision>10</revision>
        <lastModified>
          <time>1602547914046</time>
          <timezone>Etc/UTC</timezone>
        </lastModified>
        <contextSet>
          <delegate>
            <contextType>DESTINATION_RESPONSE_TRANSFORMER</contextType>
            <contextType>DESTINATION_DISPATCHER</contextType>
            <contextType>SOURCE_FILTER_TRANSFORMER</contextType>
            <contextType>SOURCE_RECEIVER</contextType>
            <contextType>DESTINATION_FILTER_TRANSFORMER</contextType>
          </delegate>
        </contextSet>
        <properties class="com.mirth.connect.model.codetemplates.BasicCodeTemplateProperties">
          <type>FUNCTION</type>
          <code>if (typeof cpgpLibs === &apos;undefined&apos;) cpgpLibs = {}
cpgpLibs.HttpClientBuilder = Packages.org.apache.http.impl.client.HttpClientBuilder
cpgpLibs.HttpGet = Packages.org.apache.http.client.methods.HttpGet
cpgpLibs.EntityUtils = Packages.org.apache.http.util.EntityUtils


/**
	Modify the description here. Modify the function name and parameters as needed. One function per
	template is recommended; create a new code template for each new function.

	@param {String} url - ConnectPGPool URL - for example http://localhost:3000
	@return {Object} returns {requestId, nonce}
*/
function cpgpCreateRequest(params) {
	var client = new cpgpLibs.HttpClientBuilder.create().build()
	var url = params.url + &apos;/auth/request&apos;
	var httpGet = new cpgpLibs.HttpGet(url)

	try {
		return JSON.parse(cpgpLibs.EntityUtils.toString(client.execute(httpGet).getEntity(), &quot;UTF-8&quot;).trim())
	} catch (e) {
		return e
	}
}</code>
        </properties>
      </codeTemplate>
      <codeTemplate version="3.9.0">
        <id>5801f535-70ef-4cd6-a177-0d6517dae3ad</id>
        <name>createSignature</name>
        <revision>6</revision>
        <lastModified>
          <time>1602551819602</time>
          <timezone>Etc/UTC</timezone>
        </lastModified>
        <contextSet>
          <delegate>
            <contextType>DESTINATION_RESPONSE_TRANSFORMER</contextType>
            <contextType>DESTINATION_DISPATCHER</contextType>
            <contextType>SOURCE_FILTER_TRANSFORMER</contextType>
            <contextType>SOURCE_RECEIVER</contextType>
            <contextType>DESTINATION_FILTER_TRANSFORMER</contextType>
          </delegate>
        </contextSet>
        <properties class="com.mirth.connect.model.codetemplates.BasicCodeTemplateProperties">
          <type>FUNCTION</type>
          <code>if (typeof cpgpLibs === &apos;undefined&apos;) cpgpLibs = {}
cpgpLibs.Mac = Packages.javax.crypto.Mac
cpgpLibs.SecretKeySpec = Packages.javax.crypto.spec.SecretKeySpec
cpgpLibs.StandardCharsets = Packages.java.nio.charset.StandardCharsets

const HMAC_SHA512 = &quot;HmacSHA512&quot;
const getBytes = (val) =&gt; Packages.java.lang.String(val).getBytes(cpgpLibs.StandardCharsets.UTF_8)

/**
	Creates a Connect PGPool crypto signature

	@param {String} key - secret key
	@param {String} nonce - onetime nonce
	@return {String} return Base64 sha512 signature
*/
function cpgpCreateSignature(params) {
     var byteKey = getBytes(params.secret)
     var sha512Hmac = cpgpLibs.Mac.getInstance(HMAC_SHA512)
     sha512Hmac.init(new cpgpLibs.SecretKeySpec(byteKey, HMAC_SHA512))
     var macData = sha512Hmac.doFinal(getBytes(params.nonce + params.text))
     	logger.info(&apos;params.nonce: &apos; + params.nonce +  &apos; params.text: &apos; + params.text + &apos; secret: &apos; + params.secret)
     return Packages.java.util.Base64.getEncoder().encodeToString(macData)
}</code>
        </properties>
      </codeTemplate>
    </codeTemplates>
  </codeTemplateLibrary>
  <codeTemplateLibrary version="3.9.0">
    <id>128794cd-83c2-40c8-a39f-21400456220f</id>
    <name>TestUtils</name>
    <revision>7</revision>
    <lastModified>
      <time>1602631721549</time>
      <timezone>Etc/UTC</timezone>
    </lastModified>
    <description></description>
    <includeNewChannels>false</includeNewChannels>
    <enabledChannelIds>
      <string>3d194c52-0c93-4104-95cb-c4c2baaa8f85</string>
      <string>0a57a2bf-346f-4519-b4ca-0436aeeb2ea5</string>
    </enabledChannelIds>
    <disabledChannelIds>
      <string>687be862-0186-4c4f-adf8-167df5255fab</string>
      <string>d4edf57b-e868-41ca-9b12-1ac51b2d6530</string>
      <string>220a84de-344c-44df-8929-7dc52ca0caaf</string>
      <string>5a249510-935e-4653-9af1-5b51b8bf2341</string>
      <string>1eaf2a13-b69c-4557-9333-02f6c0420c11</string>
      <string>d4c7aa3a-6176-4a55-8463-97d0b27b140c</string>
      <string>3f1d55fc-81a4-4999-aa92-94e05f5d2af3</string>
    </disabledChannelIds>
    <codeTemplates>
      <codeTemplate version="3.9.0">
        <id>06d88223-4f9e-41fd-bef3-8a1d59c55f95</id>
        <name>echo</name>
        <revision>1</revision>
        <lastModified>
          <time>1602442416450</time>
          <timezone>Etc/UTC</timezone>
        </lastModified>
        <contextSet>
          <delegate>
            <contextType>DESTINATION_RESPONSE_TRANSFORMER</contextType>
            <contextType>DESTINATION_DISPATCHER</contextType>
            <contextType>SOURCE_FILTER_TRANSFORMER</contextType>
            <contextType>SOURCE_RECEIVER</contextType>
            <contextType>DESTINATION_FILTER_TRANSFORMER</contextType>
          </delegate>
        </contextSet>
        <properties class="com.mirth.connect.model.codetemplates.BasicCodeTemplateProperties">
          <type>FUNCTION</type>
          <code>function echo(val) {
	return val
}</code>
        </properties>
      </codeTemplate>
    </codeTemplates>
  </codeTemplateLibrary>
</list>